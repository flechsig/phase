 File      : /afs/psi.ch/user/f/flechsig/phase/src/README
 Date      : <23 Jan 04 11:06:09 flechsig> 
 Time-stamp: <2024-10-09 22:49:15 flechsig> 
 Author    : Uwe Flechsig, flechsig@psi.ch

 $Source$ 
 $Date$
 $Revision$ 
 $Author$ 

PHASE uses GNU Libtool in order to build shared libraries on a
variety of systems. While this is very nice for making usable
binaries, it can be a pain when trying to debug a program. For that
reason, compilation of shared libraries can be turned off by
specifying the `--disable-shared' option to `configure'.

Debugging
=========

valgrind --log-file=valgrind.log --max-stackframe=81234567 --main-stacksize=812345678 --track-origins=yes phasesrv -b -m6 -oout.h5 -O2 test_5000.phase

remark: -b -m6 -oout.h5 -O2 test_5000.phase is optional (more or less default)

Installation
============

1a) install the package from the tarball
   tar -xzvf phase-xxxx.tgz

1b) cvs obsolete

1c) cvs obsolete

1d) git
    git clone git@github.com:flechsig/phase.git

2) for maintainers only: configure libtool
   libtoolize

3) for maintainers only: bootstrap - create the script configure
   ./bootstrap

4) configure the package
   ./configure [--enable-debug]

5) make

6) su -c "make install"

Errors
======
- you configured libtool on a different machine (nfs)
  run libtoolize with the option --force

- you do not have Autoconfig version 2.57
  you may try to disable the request AC_PREREQ(2.57) in configure.ac
  you may have to link/rename configure.ac to configure.in

- make will not run through the first time - you have to install the library 
  first by doing make install and then do a make again

- python errors in make (related to python3)
  export PATH=/afs/psi.ch/project/phase/bin:/afs/psi.ch/user/f/flechsig/bin:/usr/local/bin:/usr/bin:/bin

SIGN of w and l
===============
        Mit den Vorzeichen ist das so ne Sache. Ich habe die
        Routinen so programmiert, dass w der optischen Elemente immer in 
        Ausbreitungsrichtung zeigt und l immer auf die gleiche Seite zeigt,
        egal, ob ich nach oben oder nach unten ablenke. Wenn ich mit dem 
        Photon mitfliege, zeigt l z.B. immer nach links, egal, ob es rauf 
        oder runter geht. Daher ist die rechte-Hand-Regel hier nicht 
        anwendbar. 


check signs of w,l and misalignment
===================================

a) check the signs of u w l and the output y z dy dz n single ray mode
   => only one input parameter changed, only 1st order effects considered
   => *sp* means sign problem, 
   => JB means definition of Johannes Bahrdt- see previous remark
   => rhr means right hand rule
---------------------------------------------------------------------------
     |        I N P U T             |   O U T P U T     |
refl | y z dy dz |du dw dl ru rw rl | u w l | y z dy dz | remark
---------------------------------------------------------------------------
left | + 0  0  0 | 0  0  0  0  0  0 | 0 0 + | + 0  0  0 | JB ok, rhr *sp* l
left | - 0  0  0 | 0  0  0  0  0  0 | 0 0 - | - 0  0  0 | JB ok, rhr *sp* l
left | 0 +  0  0 | 0  0  0  0  0  0 | 0 - 0 | 0 -  0  0 | ok
left | 0 -  0  0 | 0  0  0  0  0  0 | 0 + 0 | 0 +  0  0 | ok
left | 0 0  +  0 | 0  0  0  0  0  0 | 0 0 + | 0 0  +  0 | ok
left | 0 0  -  0 | 0  0  0  0  0  0 | 0 0 - | 0 0  -  0 | ok
left | 0 0  0  + | 0  0  0  0  0  0 | 0 - 0 | 0 -  0  - | JB ok, rhr *sp* l
left | 0 0  0  - | 0  0  0  0  0  0 | 0 + 0 | 0 +  0  + | JB ok, rhr *sp* l
---------------------------------------------------------------------------
left | 0 0  0  0 | +  0  0  0  0  0 | + - 0 | 0 -  0  0 | u should be 0 ?
left | 0 0  0  0 | -  0  0  0  0  0 | - + 0 | 0 +  0  0 | u should be 0 ?
left | 0 0  0  0 | 0  +  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be - ?
left | 0 0  0  0 | 0  -  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be + ?
left | 0 0  0  0 | 0  0  +  0  0  0 | 0 0 0 | 0 0  0  0 | l should be - ?
left | 0 0  0  0 | 0  0  -  0  0  0 | 0 0 0 | 0 0  0  0 | l should be + ?
left | 0 0  0  0 | 0  0  0  +  0  0 | 0 0 0 | 0 0  0  0 | ok
left | 0 0  0  0 | 0  0  0  -  0  0 | 0 0 0 | 0 0  0  0 | ok
left | 0 0  0  0 | 0  0  0  0  +  0 | 0 0 0 | - +  -  + | *sp* y, dy
left | 0 0  0  0 | 0  0  0  0  -  0 | 0 0 0 | + +  +  + | *sp* y, dy
left | 0 0  0  0 | 0  0  0  0  0  + | 0 0 0 | 0 +  0  + | rhr ok, JB *sp* z, dz 
left | 0 0  0  0 | 0  0  0  0  0  - | 0 0 0 | 0 -  0  - | rhr ok, JB *sp* z, dz
-------------------------------------------------------------------------------
right| + 0  0  0 | 0  0  0  0  0  0 | 0 0 + | + 0  0  0 | ok
right| - 0  0  0 | 0  0  0  0  0  0 | 0 0 - | - 0  0  0 | ok
right| 0 +  0  0 | 0  0  0  0  0  0 | 0 + 0 | 0 -  0  0 | ok
right| 0 -  0  0 | 0  0  0  0  0  0 | 0 - 0 | 0 +  0  0 | ok
right| 0 0  +  0 | 0  0  0  0  0  0 | 0 0 + | + 0  +  0 | ok
right| 0 0  -  0 | 0  0  0  0  0  0 | 0 0 - | - 0  -  0 | ok
right| 0 0  0  + | 0  0  0  0  0  0 | 0 + 0 | 0 -  0  - | ok
right| 0 0  0  - | 0  0  0  0  0  0 | 0 - 0 | 0 +  0  + | ok
-------------------------------------------------------------------------
right| 0 0  0  0 | +  0  0  0  0  0 | + - 0 | 0 +  0  0 | u should be 0 ?
right| 0 0  0  0 | -  0  0  0  0  0 | - + 0 | 0 -  0  0 | u should be 0 ?
right| 0 0  0  0 | 0  +  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be - ? 
right| 0 0  0  0 | 0  -  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be + ?
right| 0 0  0  0 | 0  0  +  0  0  0 | 0 0 0 | 0 0  0  0 | l should be - ?
right| 0 0  0  0 | 0  0  -  0  0  0 | 0 0 0 | 0 0  0  0 | l should be + ?
right| 0 0  0  0 | 0  0  0  +  0  0 | 0 0 0 | 0 0  0  0 | ok
right| 0 0  0  0 | 0  0  0  -  0  0 | 0 0 0 | 0 0  0  0 | ok
right| 0 0  0  0 | 0  0  0  0  +  0 | 0 0 0 | - -  -  - | ok
right| 0 0  0  0 | 0  0  0  0  -  0 | 0 0 0 | + -  +  - | ok
right| 0 0  0  0 | 0  0  0  0  0  + | 0 0 0 | 0 -  0  - | JB ok, rhr *sp* z, dz 
right| 0 0  0  0 | 0  0  0  0  0  - | 0 0 0 | 0 +  0  + | JB ok, rhr *sp* z, dz
-------------------------------------------------------------------------------
up   | + 0  0  0 | 0  0  0  0  0  0 | 0 + 0 | - 0  0  0 | ok
up   | - 0  0  0 | 0  0  0  0  0  0 | 0 - 0 | + 0  0  0 | ok
up   | 0 +  0  0 | 0  0  0  0  0  0 | 0 0 + | 0 +  0  0 | JB ok, rhr *sp* l
up   | 0 -  0  0 | 0  0  0  0  0  0 | 0 0 - | 0 -  0  0 | JB ok, rhr *sp* l
up   | 0 0  +  0 | 0  0  0  0  0  0 | 0 + 0 | - 0  -  0 | ok
up   | 0 0  -  0 | 0  0  0  0  0  0 | 0 - 0 | + 0  +  0 | ok
up   | 0 0  0  + | 0  0  0  0  0  0 | 0 0 + | 0 +  0  + | JB ok, rhr *sp* l
up   | 0 0  0  - | 0  0  0  0  0  0 | 0 0 - | 0 -  0  - | JB ok, rhr *sp* l
---------------------------------------------------------------------------
up   | 0 0  0  0 | +  0  0  0  0  0 | + - 0 | + 0  0  0 | u should be 0 ?
up   | 0 0  0  0 | -  0  0  0  0  0 | - + 0 | - 0  0  0 | u should be 0 ?
up   | 0 0  0  0 | 0  +  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be - ? 
up   | 0 0  0  0 | 0  -  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be + ?
up   | 0 0  0  0 | 0  0  +  0  0  0 | 0 0 0 | 0 0  0  0 | l should be - ?
up   | 0 0  0  0 | 0  0  -  0  0  0 | 0 0 0 | 0 0  0  0 | l should be + ?
up   | 0 0  0  0 | 0  0  0  +  0  0 | 0 0 0 | 0 0  0  0 | ok
up   | 0 0  0  0 | 0  0  0  -  0  0 | 0 0 0 | 0 0  0  0 | ok
up   | 0 0  0  0 | 0  0  0  0  +  0 | 0 0 0 | - -  -  - | *sp* z, dz
up   | 0 0  0  0 | 0  0  0  0  -  0 | 0 0 0 | - +  -  + | *sp* z, dz
up   | 0 0  0  0 | 0  0  0  0  0  + | 0 0 0 | - 0  -  0 | rhr ok, JB *sp* y, dy 
up   | 0 0  0  0 | 0  0  0  0  0  - | 0 0 0 | + 0  +  0 | rhr ok, JB *sp* y, dy
-------------------------------------------------------------------------------
down | + 0  0  0 | 0  0  0  0  0  0 | 0 - 0 | - 0  0  0 | ok
down | - 0  0  0 | 0  0  0  0  0  0 | 0 + 0 | + 0  0  0 | ok
down | 0 +  0  0 | 0  0  0  0  0  0 | 0 0 + | 0 +  0  0 | ok
down | 0 -  0  0 | 0  0  0  0  0  0 | 0 0 - | 0 -  0  0 | ok
down | 0 0  +  0 | 0  0  0  0  0  0 | 0 - 0 | - 0  -  0 | ok
down | 0 0  -  0 | 0  0  0  0  0  0 | 0 + 0 | + 0  +  0 | ok
down | 0 0  0  + | 0  0  0  0  0  0 | 0 0 + | 0 +  0  + | ok
down | 0 0  0  - | 0  0  0  0  0  0 | 0 0 - | 0 -  0  - | ok
-------------------------------------------------------------------------
down | 0 0  0  0 | +  0  0  0  0  0 | + - 0 | - 0  0  0 | u should be 0 ?
down | 0 0  0  0 | -  0  0  0  0  0 | - + 0 | + 0  0  0 | u should be 0 ?
down | 0 0  0  0 | 0  +  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be - ? 
down | 0 0  0  0 | 0  -  0  0  0  0 | 0 0 0 | 0 0  0  0 | w should be + ?
down | 0 0  0  0 | 0  0  +  0  0  0 | 0 0 0 | 0 0  0  0 | l should be - ?
down | 0 0  0  0 | 0  0  -  0  0  0 | 0 0 0 | 0 0  0  0 | l should be + ?
down | 0 0  0  0 | 0  0  0  +  0  0 | 0 0 0 | 0 0  0  0 | ok
down | 0 0  0  0 | 0  0  0  -  0  0 | 0 0 0 | 0 0  0  0 | ok
down | 0 0  0  0 | 0  0  0  0  +  0 | 0 0 0 | + -  +  - | ok
down | 0 0  0  0 | 0  0  0  0  -  0 | 0 0 0 | + +  +  + | ok
down | 0 0  0  0 | 0  0  0  0  0  + | 0 0 0 | + 0  +  0 | ok
down | 0 0  0  0 | 0  0  0  0  0  - | 0 0 0 | - 0  -  0 | ok
-------------------------------------------------------------------------

b) resume
the footprint is calculate in the original coordinats (u w l) i.e. (u w l)
are not really the mirror surface coordinates ==> with misalignment
the implemented clipping at w and l is an aproximation which may fail for 
larger alignment errors


PROBLEMS with Intel Fortran Compiler at PSI
===========================================
phase: error while loading shared libraries: libintrins.so: cannot open shared o
bject file: No such file or directory
fix:
setenv LD_LIBRARY_PATH /afs/psi.ch/sys/i386_linux24/apps/intel-fc-6.0.1/compiler60/ia32/lib:$LD_LIBRARY_PATH


phase: relocation error: /afs/psi.ch/sys/i386_linux24/apps/intel-fc-6.0.1/compil                                                            er60/ia32/lib/libIEPCF90.so: symbol errno, version GLIBC_2.0 not defined in file                                                             libc.so.6 with link time reference

fix:
setenv LD_ASSUME_KERNEL 2.4.1

PROBLEMS with old libtool versions
==================================
libtool: unrecognized option `--tag=F77'

solution a) upgrade libtool
         b) delete the option --tag=F77 from the Makefiles



REQUIRED PACKAGES (NOV 2019)
============================
hdf5    | hdf5                                    | optional, hdf5 support, required for source7
fftw    | fftw                                    | optional
fortran | gfortran or intel or ...                | required for everything, fortran compiler, alternatives: portland fortran, absoft fortran.. 
qt5     |                                         | required for phaseqt, gui, Qt4 works in priciple but automatic configuration has been abandoned in 2019 
qwt     | qwt-6.x                                 | required for phaseqt, graphics package for plotting
root    | root                                    | optional, CERN data analysis tool, required for phaseopti    
idl     | idl                                     | optional, required for idl interface    
python3 | python                                  | optional, required for python lib

To build phase we need the development packages of qt and qwt (verify in case you use preinstalled versions). Other required tools are recent versions of: gcc, make, gnu autotools (libtool, automake, autoconfig)

QT6 remarks
===========
the simplest is to put the path to qmake and moc to the begin of your path. !!moc etc is now in libexec and no longer in bin!!
example for bash: export PATH=/usr/local/qt6/bin:/usr/local/qt6/libexec:${PATH}
